
package WSClient.sessions;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Sessions", targetNamespace = "http://sessions/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Sessions {


    /**
     * 
     * @param userId
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "newSession", targetNamespace = "http://sessions/", className = "WSClient.sessions.NewSession")
    @ResponseWrapper(localName = "newSessionResponse", targetNamespace = "http://sessions/", className = "WSClient.sessions.NewSessionResponse")
    @Action(input = "http://sessions/Sessions/newSessionRequest", output = "http://sessions/Sessions/newSessionResponse")
    public String newSession(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "user_id", targetNamespace = "")
        int userId);

    /**
     * 
     * @param userId
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSessions", targetNamespace = "http://sessions/", className = "WSClient.sessions.GetSessions")
    @ResponseWrapper(localName = "getSessionsResponse", targetNamespace = "http://sessions/", className = "WSClient.sessions.GetSessionsResponse")
    @Action(input = "http://sessions/Sessions/getSessionsRequest", output = "http://sessions/Sessions/getSessionsResponse")
    public List<Object> getSessions(
        @WebParam(name = "user_id", targetNamespace = "")
        int userId);

    /**
     * 
     * @param sessionId
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getKeyFrames", targetNamespace = "http://sessions/", className = "WSClient.sessions.GetKeyFrames")
    @ResponseWrapper(localName = "getKeyFramesResponse", targetNamespace = "http://sessions/", className = "WSClient.sessions.GetKeyFramesResponse")
    @Action(input = "http://sessions/Sessions/getKeyFramesRequest", output = "http://sessions/Sessions/getKeyFramesResponse")
    public List<Object> getKeyFrames(
        @WebParam(name = "session_id", targetNamespace = "")
        String sessionId);

    /**
     * 
     * @param keyFrameId
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCapturedImages", targetNamespace = "http://sessions/", className = "WSClient.sessions.GetCapturedImages")
    @ResponseWrapper(localName = "getCapturedImagesResponse", targetNamespace = "http://sessions/", className = "WSClient.sessions.GetCapturedImagesResponse")
    @Action(input = "http://sessions/Sessions/getCapturedImagesRequest", output = "http://sessions/Sessions/getCapturedImagesResponse")
    public List<Object> getCapturedImages(
        @WebParam(name = "key_frame_id", targetNamespace = "")
        String keyFrameId);

    /**
     * 
     * @param kfId
     * @param comment
     */
    @WebMethod
    @RequestWrapper(localName = "addKeyFrameComment", targetNamespace = "http://sessions/", className = "WSClient.sessions.AddKeyFrameComment")
    @ResponseWrapper(localName = "addKeyFrameCommentResponse", targetNamespace = "http://sessions/", className = "WSClient.sessions.AddKeyFrameCommentResponse")
    @Action(input = "http://sessions/Sessions/addKeyFrameCommentRequest", output = "http://sessions/Sessions/addKeyFrameCommentResponse")
    public void addKeyFrameComment(
        @WebParam(name = "kf_id", targetNamespace = "")
        String kfId,
        @WebParam(name = "comment", targetNamespace = "")
        String comment);

    /**
     * 
     * @param ciId
     * @param comment
     */
    @WebMethod
    @RequestWrapper(localName = "addCapturedImageComment", targetNamespace = "http://sessions/", className = "WSClient.sessions.AddCapturedImageComment")
    @ResponseWrapper(localName = "addCapturedImageCommentResponse", targetNamespace = "http://sessions/", className = "WSClient.sessions.AddCapturedImageCommentResponse")
    @Action(input = "http://sessions/Sessions/addCapturedImageCommentRequest", output = "http://sessions/Sessions/addCapturedImageCommentResponse")
    public void addCapturedImageComment(
        @WebParam(name = "ci_id", targetNamespace = "")
        String ciId,
        @WebParam(name = "comment", targetNamespace = "")
        String comment);

    /**
     * 
     * @param kfId
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteKeyFrame", targetNamespace = "http://sessions/", className = "WSClient.sessions.DeleteKeyFrame")
    @ResponseWrapper(localName = "deleteKeyFrameResponse", targetNamespace = "http://sessions/", className = "WSClient.sessions.DeleteKeyFrameResponse")
    @Action(input = "http://sessions/Sessions/deleteKeyFrameRequest", output = "http://sessions/Sessions/deleteKeyFrameResponse")
    public String deleteKeyFrame(
        @WebParam(name = "kf_id", targetNamespace = "")
        int kfId);

    /**
     * 
     * @param userId
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFriendsSessions", targetNamespace = "http://sessions/", className = "WSClient.sessions.GetFriendsSessions")
    @ResponseWrapper(localName = "getFriendsSessionsResponse", targetNamespace = "http://sessions/", className = "WSClient.sessions.GetFriendsSessionsResponse")
    @Action(input = "http://sessions/Sessions/getFriendsSessionsRequest", output = "http://sessions/Sessions/getFriendsSessionsResponse")
    public List<Object> getFriendsSessions(
        @WebParam(name = "user_id", targetNamespace = "")
        String userId);

    /**
     * 
     * @param userId
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOtherSessions", targetNamespace = "http://sessions/", className = "WSClient.sessions.GetOtherSessions")
    @ResponseWrapper(localName = "getOtherSessionsResponse", targetNamespace = "http://sessions/", className = "WSClient.sessions.GetOtherSessionsResponse")
    @Action(input = "http://sessions/Sessions/getOtherSessionsRequest", output = "http://sessions/Sessions/getOtherSessionsResponse")
    public List<Object> getOtherSessions(
        @WebParam(name = "user_id", targetNamespace = "")
        String userId);

    /**
     * 
     * @param ciId
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteCapturedImage", targetNamespace = "http://sessions/", className = "WSClient.sessions.DeleteCapturedImage")
    @ResponseWrapper(localName = "deleteCapturedImageResponse", targetNamespace = "http://sessions/", className = "WSClient.sessions.DeleteCapturedImageResponse")
    @Action(input = "http://sessions/Sessions/deleteCapturedImageRequest", output = "http://sessions/Sessions/deleteCapturedImageResponse")
    public String deleteCapturedImage(
        @WebParam(name = "ci_id", targetNamespace = "")
        String ciId);

    /**
     * 
     * @param base64
     * @param sessionId
     * @param comment
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "newKeyFrame", targetNamespace = "http://sessions/", className = "WSClient.sessions.NewKeyFrame")
    @ResponseWrapper(localName = "newKeyFrameResponse", targetNamespace = "http://sessions/", className = "WSClient.sessions.NewKeyFrameResponse")
    @Action(input = "http://sessions/Sessions/newKeyFrameRequest", output = "http://sessions/Sessions/newKeyFrameResponse")
    public String newKeyFrame(
        @WebParam(name = "session_id", targetNamespace = "")
        String sessionId,
        @WebParam(name = "comment", targetNamespace = "")
        String comment,
        @WebParam(name = "base64", targetNamespace = "")
        String base64);

    /**
     * 
     * @param base64
     * @param kfId
     * @param comment
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "newCapturedImage", targetNamespace = "http://sessions/", className = "WSClient.sessions.NewCapturedImage")
    @ResponseWrapper(localName = "newCapturedImageResponse", targetNamespace = "http://sessions/", className = "WSClient.sessions.NewCapturedImageResponse")
    @Action(input = "http://sessions/Sessions/newCapturedImageRequest", output = "http://sessions/Sessions/newCapturedImageResponse")
    public String newCapturedImage(
        @WebParam(name = "kf_id", targetNamespace = "")
        String kfId,
        @WebParam(name = "base64", targetNamespace = "")
        String base64,
        @WebParam(name = "comment", targetNamespace = "")
        String comment);

}
